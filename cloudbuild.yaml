# COR4EDU SMS - Google Cloud Build Configuration
# Automated CI/CD pipeline for multi-school deployments

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:latest'
      - '.'
    id: 'build-image'

  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:latest'
    id: 'push-image-latest'

  # Step 3: Validate Database Schema (PREVENTS SCHEMA DRIFT)
  # This step prevents Issues #8, #9, #11 from recurring by ensuring
  # Cloud SQL schema matches what the code expects BEFORE deploying
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "================================================================"
        echo " PRE-DEPLOYMENT SCHEMA VALIDATION"
        echo "================================================================"

        # Install PHP and wget
        apt-get update -qq && apt-get install -y -qq php-cli php-mysql wget > /dev/null

        # Install Cloud SQL Proxy
        wget -q https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.8.2/cloud-sql-proxy.linux.amd64 -O cloud-sql-proxy
        chmod +x cloud-sql-proxy

        # Start Cloud SQL Proxy in background
        ./cloud-sql-proxy --port 3306 ${PROJECT_ID}:${_REGION}:${_CLOUDSQL_INSTANCE} &
        PROXY_PID=$$!

        # Wait for proxy to be ready
        echo "Waiting for Cloud SQL Proxy..."
        sleep 5

        # Set environment variables for validation script
        export DB_HOST=127.0.0.1
        export DB_PORT=3306
        export DB_NAME=${_DB_NAME}

        # Get DB credentials from Secret Manager
        export DB_USERNAME=$$(gcloud secrets versions access latest --secret=${_DB_USERNAME_SECRET})
        export DB_PASSWORD=$$(gcloud secrets versions access latest --secret=${_DB_PASSWORD_SECRET})

        # Run schema validation
        php validate_schema.php
        VALIDATION_EXIT_CODE=$$?

        # Kill proxy
        kill $$PROXY_PID 2>/dev/null || true

        # Exit with validation result
        if [ $$VALIDATION_EXIT_CODE -ne 0 ]; then
          echo ""
          echo "================================================================"
          echo " ❌ DEPLOYMENT BLOCKED - SCHEMA DRIFT DETECTED"
          echo "================================================================"
          echo ""
          echo "Action Required:"
          echo "1. Apply missing migrations to Cloud SQL"
          echo "2. Rebuild to trigger validation again"
          echo ""
          exit 1
        fi

        echo ""
        echo "================================================================"
        echo " ✅ SCHEMA VALIDATION PASSED - PROCEEDING TO DEPLOYMENT"
        echo "================================================================"
        echo ""
    id: 'validate-schema'
    waitFor: ['push-image-latest']

  # Step 4: Deploy to Cloud Run (ONLY if schema validation passed)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:latest'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'DB_SOCKET=/cloudsql/${PROJECT_ID}:${_REGION}:${_CLOUDSQL_INSTANCE}'
      - '--set-env-vars'
      - 'DB_NAME=${_DB_NAME}'
      - '--set-secrets'
      - 'DB_USERNAME=${_DB_USERNAME_SECRET}:latest'
      - '--set-secrets'
      - 'DB_PASSWORD=${_DB_PASSWORD_SECRET}:latest'
      - '--add-cloudsql-instances'
      - '${PROJECT_ID}:${_REGION}:${_CLOUDSQL_INSTANCE}'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--timeout'
      - '60s'
      - '--port'
      - '8080'
    id: 'deploy-cloud-run'
    waitFor: ['validate-schema']

# Substitution variables (configure per school)
substitutions:
  _SERVICE_NAME: 'sms-edu'
  _REGION: 'us-central1'
  _ARTIFACT_REPO: 'cor4edu-containers'
  _CLOUDSQL_INSTANCE: 'sms-edu-db'
  _DB_NAME: 'cor4edu_sms'
  _DB_USERNAME_SECRET: 'sms-edu-db-username'
  _DB_PASSWORD_SECRET: 'sms-edu-db-password'

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'N1_HIGHCPU_8'

# Build timeout (10 minutes)
timeout: '600s'

# Images to push to registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:latest'
